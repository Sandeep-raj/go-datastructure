package recursion

import "log"

/*
Print all subsequences of a string
Given a string, we have to find out all subsequences of it. A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.
*/

func getSubsequence(str string, resArr []string) []string {
	if str == "" {
		tempArr := append(make([]string, 0), "")
		return tempArr
	}

	currChr := string(str[0])
	resArr = getSubsequence(str[1:], resArr)

	for _, s := range resArr {
		resArr = append(resArr, currChr+s)
	}

	return resArr
}

func TestGetSubsequence() {
	resArr := make([]string, 0)
	result := getSubsequence("yvTA", resArr)
	for _, s := range result {
		log.Print(s)
	}
}
